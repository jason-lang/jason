/*
   Jason Gradle build file to publish jason.jar into Maven Central

   based on
        https://weibeld.net/java/publish-to-maven-central.html
   and
        https://github.com/DanySK/publish-on-central

   for signing:
        https://docs.gradle.org/current/userguide/signing_plugin.html

   add MAVEN_CENTRAL_USERNAME and MAVEN_CENTRAL_PASSWORD to your environment

   run with

       touch settings.gradle
       cp ../gradle.properties .

       //gradle -b maven-central.gradle signMavenPublication
       gradle -b maven-central.gradle uploadAllPublicationsToMavenCentralNexus
       //gradle -b maven-central.gradle releaseStagingRepositoryOnMavenCentral
       //gradle -b maven-central.gradle dropStagingRepositoryOnMavenCentral

       rm settings.gradle gradle.properties

   go to
       https://s01.oss.sonatype.org/#stagingProfiles

       and monitor the steps
*/

plugins {
    id "ca.coglinc.javacc" version "2.4.0"
    // see https://github.com/johnmartel/javaccPlugin
    id "org.danilopianini.publish-on-central" version "3.4.0"
}


apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

version "${jasonVersion}"
group   "${groupId}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    api 'net.sf.ingenias:jade:4.3'

    api 'javax.json:javax.json-api:1.1.4'
    api 'org.glassfish:javax.json:1.1.4'

    testImplementation 'junit:junit:4.12'
}


jar {
    // archiveBaseName = 'jason'
    manifest {
        attributes 'Specification-Title': 'Jason Language',
                   'Specification-Version': project.version,
                   'Implementation-Version': new Date().toString(),
                   'Main-Class': 'jason.infra.local.RunLocalMAS'
    }
    from('src') {
        include '/test/jason/inc/**/*.asl'
        include '/test/jason/**/*.mas2j'
    }
}


// the following lines is used to avoid errors while generating javadoc
// if (JavaVersion.current().isJava8Compatible()) {
//     allprojects {
//       tasks.withType(Javadoc) {
//         options.addStringOption('Xdoclint:none', '-quiet')
//         options.addStringOption("Xmaxwarns", "1")
//       }
//     }
// }

compileJavacc {
    inputDirectory = file('src/main/javacc')
    outputDirectory = file(project.buildDir.absolutePath + '/generated/javacc')
}

publishOnCentral {
    projectUrl.set("https://github.com/jason-lang/jason")
    projectDescription.set("Jason is a programming language to develop BDI/cognitive agents")
    scmConnection.set("scm:git:https://github.com/jason-lang/jason")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                developers {
                    developer {
                        name.set('Jomi Fred Hubner')
                        email.set('jomifred@gmail.com')
                        url.set('https://jomifred.github.io')
                    }
                    developer {
                        name.set('Rafael Heitor Bordini')
                        email.set('rafael.h.bordini@gmail.com')
                    }
                }
            }
        }
    }
}
